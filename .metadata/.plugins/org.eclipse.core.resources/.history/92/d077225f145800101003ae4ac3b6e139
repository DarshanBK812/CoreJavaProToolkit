package problems.pattren.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class P15 {

	// find the smallest missing +int

	public static void find(int arr []) {
		List<Integer> list = new ArrayList<Integer>();
		for(int i : arr) {
			list.add(i);
		}
		Arrays.sort(arr);
		System.out.println(Arrays.toString(arr));
		for (int i = 1; i < arr.length; i++) {
			if(arr[i] >=1) {
				int val = arr[i] - arr[i-1];
				if(!list.contains(val)) {
					System.out.println(val);
					break;
				}
			}
		}
	}

	public static void main(String[] args) {
		int arr[] = { 1 , -2, 4, -3, 2, -1 };

		find(arr);
		Set<Integer> set = new LinkedHashSet<Integer>();

//		Arrays.sort(arr);
//		for (int i = 0; i < arr.length; i++) {
//			set.add(arr[i]);
//		} 
//		System.out.println(set);
//		 System.out.println(Arrays.toString(arr));
//		 int val = 0;
//		 int j = 0;
//		for (int i =0 ; i < arr.length; i++) {
//			if(arr[i] < 0) {
////				System.out.println(arr[i]);
//				j++;
//				continue;
//			}
//			val = arr[j-1] + arr[i];
//			if(!set.contains(val)) {
//				if(val != 0) 
//				System.out.println(val);
//			}

//		}

	}

}
